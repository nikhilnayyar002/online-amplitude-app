+ components

	(c) mcq-page
		html: normal, comprehension
        ts:   
            @Input() question:Question;
            @Output('emit') questionEmitEvent= new EventEmitter<Question>();
            ngOnChanges() -> emit(null) 
            onClick() -> emit(Question) /* radio clicked */
        scss: page

    (c) overall-test-detail
        html: table
        ts:
            @Input() sections:Array<Section>;
            @Input() questions:Array<Question>;
            rtnTableDetailsForSection() 
+ page 

    (cl) page-component.modal
        ts:
           @Output() closeEvent=new EventEmitter<boolean>();
            closeTheComponent() -> this.closeEvent.emit(true);
   
    (c) instructions
        scss: main 

    (c) mcqs (MainService)
        ts:
            onEmit() -> updateQuestion
            next() -> 
                getNextQuestionIndex(),
                checkCurrentQuestion() -> setQuestionState(),
                setQuestionSelected
            mark() ->
                markCurrentQuestion(),
                getNextQuestionIndex() -> setQuestionSelected()
            clear() -> clearCurrentQuestion()

        ts:

    (c) questions (MainService)
        scss: main

    (cl) page-items -> PageItem /* wraps a page component with data */
    (s) PageService 
        getPages() -> Array<PageItem>

+  shared
    () global
        QuestionState -> enum
    () mock
        mockedTest

-----------------------------------------------------
+
    (c) app (MainService)
    (s) in-memory-data.service
        createDb() -> questions

    (s) MainService
    (d) PageSwitchDirective
    (m) shared 
        (p) safe-style
        (p) timer









Problems:
            <!-- suppressing error (dev only)-->